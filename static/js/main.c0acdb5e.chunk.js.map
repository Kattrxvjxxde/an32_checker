{"version":3,"sources":["components/Calculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","formControl","width","Calculator","classes","React","useState","bpm","setBpm","noteType","setNoteType","handleChange","event","target","name","Number","value","bpmOptions","i","push","MenuItem","noteTypeOptions","map","num","calcInterval","useMemo","Math","round","Box","sx","display","justifyContent","p","m","FormControl","className","InputLabel","Select","onChange","textAlign","App","AppBar","position","Toolbar","Typography","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAUMA,EAAYC,aAAW,iBAAO,CAClCC,YAAa,CACXC,MAAO,WAgFIC,EA5Ec,WAkB3B,IAjBA,IAAMC,EAAUL,IAEhB,EAAsBM,IAAMC,SAAiB,KAA7C,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAgCH,IAAMC,SAAiB,IAAvD,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpB,OAAOA,EAAMC,OAAOC,MAClB,IAAK,MACH,OAAON,EAAOO,OAAOH,EAAMC,OAAOG,QACpC,IAAK,WACH,OAAON,EAAYK,OAAOH,EAAMC,OAAOG,QACzC,QACE,SAIAC,EAAa,GACVC,EAAI,EAAGA,EAAI,IAAMA,IACxBD,EAAWE,KACT,cAACC,EAAA,EAAD,CAAUJ,MAAOE,EAAjB,SAA6BA,GAAJA,IAI7B,IAAMG,EACJ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAIC,KAAI,SAACC,GAAD,OAClC,eAACH,EAAA,EAAD,CAAUJ,MAAOO,EAAjB,UAAiCA,EAAjC,WAA2BA,MAGzBC,EAAenB,IAAMoB,SAAQ,kBACjCC,KAAKC,MAAM,MAAYpB,EAAME,IAAa,MAC1C,CAACF,EAAKE,IAGR,OACE,qCACE,eAACmB,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,eAAgB,eAChBC,EAAG,EACHC,EAAG,GALP,UAQE,eAACC,EAAA,EAAD,CAAaC,UAAW/B,EAAQH,YAAhC,UACE,cAACmC,EAAA,EAAD,kBACA,cAACC,EAAA,EAAD,CACEvB,KAAK,MACLE,MAAOT,EACP+B,SAAU3B,EAHZ,SAKGM,OAIL,eAACiB,EAAA,EAAD,CAAaC,UAAW/B,EAAQH,YAAhC,UACE,cAACmC,EAAA,EAAD,wBACA,cAACC,EAAA,EAAD,CACEvB,KAAK,WACLE,MAAOP,EACP6B,SAAU3B,EAHZ,SAKGU,UAKP,cAACO,EAAA,EAAD,CAAKC,GAAI,CAAEG,EAAG,EAAGC,EAAG,GAApB,SACE,eAACL,EAAA,EAAD,CAAKC,GAAI,CAAEU,UAAW,UAAtB,UACGf,EADH,eCxDOgB,EAlBO,WACpB,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,yEAIJ,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAClB,EAAA,EAAD,CAAKC,GAAI,CAAEI,EAAG,UAAd,SACE,cAAC,EAAD,YCPKc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0acdb5e.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Box,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    width: '30%',\n  },\n}));\n\nconst Calculator: React.FC = () => {\n  const classes = useStyles();\n\n  const [bpm, setBpm] = React.useState<number>(230);\n  const [noteType, setNoteType] = React.useState<number>(24);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown, name?: string }>) => {\n    switch(event.target.name) {\n      case 'bpm':\n        return setBpm(Number(event.target.value));\n      case 'noteType':\n        return setNoteType(Number(event.target.value));\n      default:\n        return;\n    }\n  };\n\n  const bpmOptions = [];\n  for (let i = 1; i < 1000; i++) {\n    bpmOptions.push(\n      <MenuItem value={i} key={i}>{i}</MenuItem>\n    )\n  }\n\n  const noteTypeOptions =\n    [4, 5, 6, 7, 8, 12, 16, 24, 32].map((num) =>\n      <MenuItem value={num} key={num}>{num}分</MenuItem>\n  );\n\n  const calcInterval = React.useMemo(() =>\n    Math.round(24000000 / (bpm * noteType)) / 100,\n    [bpm, noteType]\n  );\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-evenly',\n          p: 1,\n          m: 1,\n        }}\n      >\n        <FormControl className={classes.formControl}>\n          <InputLabel>BPM</InputLabel>\n          <Select\n            name=\"bpm\"\n            value={bpm}\n            onChange={handleChange}\n          >\n            {bpmOptions}\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.formControl}>\n          <InputLabel>NOTE TYPE</InputLabel>\n          <Select\n            name=\"noteType\"\n            value={noteType}\n            onChange={handleChange}\n          >\n            {noteTypeOptions}\n          </Select>\n        </FormControl>\n      </Box>\n\n      <Box sx={{ p: 1, m: 1 }}>\n        <Box sx={{ textAlign: 'center' }}>\n          {calcInterval} ms\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default Calculator;\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Container,\n  Box,\n} from '@material-ui/core';\nimport Calculator from './components/Calculator';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography>あんみつチェッカー</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"sm\">\n        <Box sx={{ m: '30px 0' }}>\n          <Calculator />\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}