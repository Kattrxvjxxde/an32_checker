{"version":3,"sources":["components/GuideButton.tsx","components/NumberField.tsx","images/24to16_1.jpg","images/24to16_2.jpg","components/SupplementButton.tsx","components/TweetButton.tsx","components/ResultBox.tsx","images/arrow_down.svg","components/Calculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","dialogContentText","fontSize","exampleText","margin","border","padding","hr","sectionLabel","section","tips","GuideButton","classes","React","useState","open","setOpen","handleClose","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Button","color","variant","onClick","Dialog","onClose","scroll","DialogContent","dividers","DialogContentText","id","ref","tabIndex","className","Link","href","underline","target","rel","DialogActions","numberField","NumberField","props","label","name","value","handleChange","valueStr","String","TextField","type","inputProps","pattern","onChange","InputLabelProps","shrink","buttonBox","textAlign","buttonText","img","width","SupplementButton","display","Box","style","visibility","DialogTitle","src","Img24to16_1","alt","Img24to16_2","defaultProps","tweetButtonBox","tweetButtonButton","borderColor","backgroundColor","transition","tweetButton","alignItems","icon","marginRight","TweetButton","bpm","noteType","criticalSec","noteTypeText","tweetText","TwitterShareButton","title","url","hashtags","TwitterIcon","size","round","FIGURE_HEIGHT","CRITICAL_TH0","flexBox","marginBottom","justifyContent","figureContainer","height","position","noteContainer","realNoteFigure1","borderBottom","zIndex","realNoteFigure2","marginLeft","borderTop","criticalFigure","top","left","transform","WebkitTransform","MsTransform","animation","opacity","impossibleText","fontWeight","virtualNote","resultContainer","content","description","resultText","criticalText","ResultBox","interval","noteFigureHeight","criticalFigureHeight","intervalStr","criticalSecStr","criticalTextColor","criticalFigureColor","criticalTextClass","test","split","map","str","index","Fragment","sx","background","arrowDown","onlyNumRegexp","defaultBpm","defaultNoteType","params","URLSearchParams","window","location","search","paramsBpm","get","paramsNoteType","Number","Calculator","setBpm","setNoteType","event","strValue","replace","slice","calcInterval","useMemo","Math","calcCriticalSec","ArrowDown","appBar","toolbar","typography","calculatorBox","App","AppBar","Toolbar","Typography","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAWMA,EAAYC,aAAW,iBAAO,CAClCC,kBAAmB,CACjBC,SAAU,UAEZC,YAAa,CACXC,OAAQ,WACRF,SAAU,SACVG,OAAQ,uBACRC,QAAS,UAEXC,GAAI,CACFH,OAAQ,iBAEVI,aAAc,CACZJ,OAAQ,KAEVK,QAAS,CACPL,OAAQ,YAEVM,KAAM,CACJR,SAAU,cAuHCS,EAnHe,WAC5B,IAAMC,EAAUb,IAEhB,EAAwBc,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAE5BE,EAAwBL,IAAMM,OAAoB,MAUxD,OATAN,IAAMO,WAAU,WACd,GAAIL,EAAM,CACR,IAAiBM,EAAuBH,EAAhCI,QACmB,OAAvBD,GACFA,EAAmBE,WAGtB,CAACR,IAGF,gCACE,cAACS,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,WACRC,QAlBa,kBAAMX,GAAQ,IAe7B,gCAOA,eAACY,EAAA,EAAD,CACEb,KAAMA,EACNc,QAASZ,EACTa,OAAO,QACP,mBAAiB,4BAJnB,UAME,cAACC,EAAA,EAAD,CAAeC,UAAU,EAAzB,SACE,eAACC,EAAA,EAAD,CACEC,GAAG,4BACHC,IAAKjB,EACLkB,UAAW,EACXC,UAAWzB,EAAQX,kBAJrB,UAME,0DACA,+GACe,oCADf,iIACwD,uBADxD,4PAKA,oBAAIoC,UAAWzB,EAAQL,KAEvB,oDACA,oBAAI8B,UAAWzB,EAAQJ,aAAvB,gCACA,sBAAK6B,UAAWzB,EAAQH,QAAxB,UACE,qNACgC,oCADhC,SAC2C,0CAD3C,gDAGA,oBAAG4B,UAAWzB,EAAQT,YAAtB,mIACwC,uBADxC,mCAEc,uBAFd,yEAKA,8BAAG,oCAAH,8CAAqB,0CAArB,wIAGF,oBAAIkC,UAAWzB,EAAQJ,aAAvB,gCACA,sBAAK6B,UAAWzB,EAAQH,QAAxB,UACE,yGACc,uBADd,0HAIA,oBAAG4B,UAAWzB,EAAQH,QAAtB,UACE,+DADF,6IAC+C,uBAC7C,qDAFF,iIAGE,mBAAG4B,UAAWzB,EAAQF,KAAtB,gTAIF,qHACgB,qDADhB,yGACkD,uBAChD,qDAFF,yDAE4B,+FAF5B,oCAIA,2QACyC,uBADzC,eAEI,0CAFJ,SAEqB,mCAFrB,iLAKF,oBAAI2B,UAAWzB,EAAQJ,aAAvB,gCACA,qBAAK6B,UAAWzB,EAAQH,QAAxB,SACE,yGAAe,uBAAf,sOAGF,oBAAI4B,UAAWzB,EAAQL,KAEvB,8CACA,qKAEE,cAAC+B,EAAA,EAAD,CAAMC,KAAK,iCAAiCC,UAAU,SAASC,OAAO,SAASC,IAAI,sBAAnF,gCAFF,4DAOA,uIAGA,oBAAGL,UAAWzB,EAAQT,YAAtB,uGACwD,uBADxD,2IAMJ,cAACwC,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CAAQG,QAASV,EAAjB,yC,SCzIJlB,EAAYC,aAAW,iBAAO,CAClC4C,YAAa,CACXxC,OAAQ,gBAiCGyC,EAtBiC,SAACC,GAC/C,IAAMlC,EAAUb,IAERgD,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,KAAMC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,aACtBC,EAAqB,IAAVF,EAAc,GAAKG,OAAOH,GAE3C,OACE,cAACI,EAAA,EAAD,CACEN,MAAOA,EACPC,KAAMA,EACNM,KAAK,SACLC,WAAY,CAAEC,QAAS,UACvBP,MAAOE,EACPM,SAAUP,EACVQ,gBAAiB,CACfC,QAAQ,GAEVtB,UAAWzB,EAAQgC,e,SCpCV,MAA0B,qCCA1B,MAA0B,qCCcnC7C,EAAYC,aAAW,iBAAO,CAClC4D,UAAW,CACTxD,OAAQ,qBACRyD,UAAW,SAEbC,WAAY,CACV5D,SAAU,UAEZD,kBAAmB,CACjBC,SAAU,UAEZC,YAAa,CACXC,OAAQ,WACRF,SAAU,SACVG,OAAQ,uBACRC,QAAS,SACTuD,UAAW,UAEbE,IAAK,CACHC,MAAO,aAQLC,EAAoD,SAACnB,GACzD,IAAMlC,EAAUb,IACRmE,EAAYpB,EAAZoB,QAER,EAAwBrD,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAE5BE,EAAwBL,IAAMM,OAAoB,MAUxD,OATAN,IAAMO,WAAU,WACd,GAAIL,EAAM,CACR,IAAiBM,EAAuBH,EAAhCI,QACmB,OAAvBD,GACFA,EAAmBE,WAGtB,CAACR,IAGF,eAACoD,EAAA,EAAD,CAAK9B,UAAWzB,EAAQgD,UAAxB,UACE,cAACpC,EAAA,EAAD,CACEa,UAAWzB,EAAQkD,WACnBrC,MAAM,UACNC,QAAQ,WACRC,QAnBa,kBAAMX,GAAQ,IAoB3BoD,MAAO,CAAEC,WAAYH,EAAU,UAAY,UAL7C,+EASA,eAACtC,EAAA,EAAD,CACEb,KAAMA,EACNc,QAASZ,EACTa,OAAO,QACP,kBAAgB,0BAChB,mBAAiB,gCALnB,UAOE,cAACwC,EAAA,EAAD,CAAapC,GAAG,0BAAhB,wEAGA,cAACH,EAAA,EAAD,CAAeC,UAAU,EAAzB,SACE,eAACC,EAAA,EAAD,CACEC,GAAG,gCACHC,IAAKjB,EACLkB,UAAW,EACXC,UAAWzB,EAAQX,kBAJrB,UAME,6OACyC,uBADzC,kKAE+B,uBAF/B,qMAKA,mBAAGoC,UAAWzB,EAAQT,YAAtB,SACE,qBAAKkC,UAAWzB,EAAQmD,IAAKQ,IAAKC,EAAaC,IAAI,kBAErD,6IACoB,uBADpB,oKAIA,mBAAGpC,UAAWzB,EAAQT,YAAtB,SACE,qBAAKkC,UAAWzB,EAAQmD,IAAKQ,IAAKG,EAAaD,IAAI,uBAIzD,cAAC9B,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CAAQG,QAASV,EAAjB,yCAOVgD,EAAiBU,aAAe,CAC9BT,SAAS,GAGID,Q,kBCzGTlE,EAAYC,aAAW,iBAAO,CAClC4E,eAAgB,CACdxE,OAAQ,UAEVyE,kBAAmB,CACjBC,YAAa,UACbC,gBAAiB,UACjBtD,MAAO,OACPuD,WAAY,OACZ,UAAW,CACTvD,MAAO,UACPuD,WAAY,SAGhBC,YAAa,CACXf,QAAS,OACTgB,WAAY,UAEdC,KAAM,CACJC,YAAa,cA0CFC,EAhCiC,SAACvC,GAC/C,IAAMlC,EAAUb,IACRuF,EAA+BxC,EAA/BwC,IAAKC,EAA0BzC,EAA1ByC,SAAUC,EAAgB1C,EAAhB0C,YAEjBC,EAA4B,IAAbF,EAAiB,qBAAjB,UAA4BA,EAA5B,sBAEjBG,EAAY,GAOhB,OALEA,EADEF,EAAc,EACP,aAASF,EAAT,iBAAgBG,EAAhB,mHAAuDD,EAAvD,oDAEA,aAASF,EAAT,iBAAgBG,EAAhB,sGAIT,cAACtB,EAAA,EAAD,CAAK9B,UAAWzB,EAAQgE,eAAxB,SACE,cAACpD,EAAA,EAAD,CACEE,QAAQ,WACRW,UAAWzB,EAAQiE,kBAFrB,SAIE,eAACc,EAAA,EAAD,CACEC,MAAOF,EACPG,IAAG,2DAAsDP,EAAtD,qBAAsEC,GACzEO,SAAU,CAAC,kDACXzD,UAAWzB,EAAQqE,YAJrB,UAME,cAACc,EAAA,EAAD,CAAaC,KAAM,GAAIC,OAAK,EAAC5D,UAAWzB,EAAQuE,OANlD,sDClDFe,EAAgB,IAGhBC,EAAe,IAAa,IAK5BpG,EAAYC,aAAW,iBAAO,CAClCoG,QAAS,CACPC,aAAc,SACd/F,QAAS,SACT4D,QAAS,OACToC,eAAgB,eAChBjG,OAAQ,wBAEVkG,gBAAiB,CACfC,OAlB6B,IAmB7BC,SAAU,YAEZC,cAAe,CACbF,OAtB6B,IAuB7BtC,QAAS,QAEXyC,gBAAiB,CACfvG,OAAQ,OACRgF,YAAa,GACbpB,MA1Be,IA2Bf4C,aAAc,uBACdC,OAAQ,KAEVC,gBAAiB,CACf1G,OAAQ,OACR2G,WAAY,GACZ/C,MAjCe,IAkCfgD,UAAW,uBACXH,OAAQ,KAEVI,eAAgB,CACdC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,gBAAiB,wBACjBC,YAAa,wBACbtD,MAAO,OACPyC,SAAU,WACV5C,UAAW,SACX0D,UAAW,mCAEb,yBAA0B,CACxB,WAAY,CAAEC,QAAS,IACvB,MAAO,CAAEA,QAAS,KAEpBC,eAAgB,CACdP,IAAK,MACLE,UAAW,gBACXC,gBAAiB,gBACjBC,YAAa,gBACbtD,MAAO,OACPyC,SAAU,WACV5C,UAAW,SACX3D,SAAU,SACVwH,WAAY,OACZjG,MAAO,QAETkG,YAAa,CACXT,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,gBAAiB,wBACjBC,YAAa,wBACbtD,MAAO,QAGT4D,gBAAiB,CACfvB,aAAc,SACdxC,UAAW,UAEbd,MAAO,CACLsD,aAAc,SACdnC,QAAS,OACTgB,WAAY,SACZoB,eAAgB,SAChBpG,SAAU,SACV,YAAa,CACXkF,YAAa,SACb4B,UAAW,eACXa,QAAS,KACT7D,MAAO,QAET,WAAY,CACV+C,WAAY,SACZC,UAAW,eACXa,QAAS,KACT7D,MAAO,SAGX8D,YAAa,CACX5H,SAAU,SACV2D,UAAW,UAEbkE,WAAY,CACVtG,MAAO,OACPiG,WAAY,QAEdM,aAAc,CACZN,WAAY,OACZH,UAAW,iCAEb,uBAAwB,CACtB,WAAY,CAAEC,QAAS,GACvB,MAAO,CAAEA,QAAS,SAiKPS,EAtJ6B,SAACnF,GAC3C,IAAMlC,EAAUb,IACRuF,EAAyCxC,EAAzCwC,IAAKC,EAAoCzC,EAApCyC,SAAU2C,EAA0BpF,EAA1BoF,SAAU1C,EAAgB1C,EAAhB0C,YAE3B2C,EACJD,EAAW1C,EACPU,EACAA,EAAgBgC,EAAW1C,EAE3B4C,EACL5C,EAAc0C,EACThC,EACAA,EAAgBV,EAAc0C,EAE9BG,EAA2B,IAAbH,EAAiB,QAAjB,UAA8BA,EAA9B,OAEhBI,EAAiB,QACJ,IAAbJ,IACFI,EAAiB9C,EAAc,EAAd,UAAqBA,EAArB,OAAwC,gBAG3D,IAAI+C,EAAoB,OACpBC,EAAsB,yEACtBT,EAAa,qHAEA,IAAbG,IACE1C,GAAe,EACjBuC,EAAa,yDACJ,GAAKvC,GAAeA,EAAcW,GAC3CoC,EAAoB,OACpBC,EAAsB,yEACtBT,EAAa,gMACJ5B,GAAgBX,GAAeA,EAtJzB,IAuJf+C,EAAoB,OACpBC,EAAsB,yEACtBT,EAA0B,KAAbxC,EACT,+XACA,8KA3JW,IA4JUC,GAAeA,EA3JzB,IA4Jf+C,EAAoB,OACpBC,EAAsB,yEACtBT,EAA0B,KAAbxC,EACT,6SACA,4SAhKW,IAiKUC,GAAeA,EAhKzB,IAiKf+C,EAAoB,OACpBC,EAAsB,yEACtBT,EAA0B,KAAbxC,EACT,uRACA,gYAEJgD,EAAoB,OACpBC,EAAsB,yEACtBT,EAAa,2dAIjB,IAAMU,EAAoBjD,EAAc,EAAI5E,EAAQoH,aAAepH,EAAQmH,WAE3E,OACE,qCACE,cAAC5D,EAAA,EAAD,CAAK9B,UAAWzB,EAAQmC,MAAxB,sCAIA,eAACoB,EAAA,EAAD,CAAK9B,UAAWzB,EAAQgH,gBAAxB,UACE,eAACzD,EAAA,EAAD,CAAK9B,UAAWzB,EAAQwF,QAAxB,UACE,eAACjC,EAAA,EAAD,CAAK9B,UAAWzB,EAAQmH,WAAxB,2CAEE,uBACCM,KAEH,eAAClE,EAAA,EAAD,CACE9B,UAAWoG,EACXrE,MAAO,CAAE3C,MAAO8G,GAFlB,iCAKE,uBACCD,QAGL,cAAC,EAAD,CACEpE,QAAS,yEAAkBwE,KAAKX,KAElC,cAAC5D,EAAA,EAAD,CAAK9B,UAAWzB,EAAQkH,YAAxB,SACGC,EAAWY,MAAM,MAAMC,KAAI,SAACC,EAAKC,GAAN,OAC1B,eAAC,IAAMC,SAAP,WAA6BF,EAAI,yBAAZC,QAIzB,cAAC,EAAD,CACExD,IAAKA,EACLC,SAAUA,EACVC,YAAaA,OAIjB,cAACrB,EAAA,EAAD,CAAK9B,UAAWzB,EAAQmC,MAAxB,4CAIA,cAACoB,EAAA,EAAD,CAAK9B,UAAWzB,EAAQwF,QAAxB,SACE,eAACjC,EAAA,EAAD,CAAK9B,UAAWzB,EAAQ2F,gBAAxB,UACE,eAACpC,EAAA,EAAD,CAAK9B,UAAWzB,EAAQ8F,cAAxB,UACE,cAACvC,EAAA,EAAD,CACE9B,UAAWzB,EAAQ+F,gBACnBqC,GAAI,CAAExC,OAAQ2B,KAEhB,cAAChE,EAAA,EAAD,CACE9B,UAAWzB,EAAQkG,gBACnBkC,GAAI,CAAExC,OAAQ2B,QAGjB3C,EAAc,GACb,cAACrB,EAAA,EAAD,CACE9B,UAAWzB,EAAQqG,eACnB+B,GAAI,CAAExC,OAAQ4B,GACdhE,MAAO,CAAE6E,WAAYT,KAGxBhD,GAAe,GACd,cAACrB,EAAA,EAAD,CAAK9B,UAAWzB,EAAQ6G,eAAxB,iDAON,eAACtD,EAAA,EAAD,CAAK9B,UAAWzB,EAAQkH,YAAxB,UACE,8IACqB,uBADrB,+IAE2B,uBAF3B,sEAGc,+DAHd,gDAKA,2HACiB,uBADjB,+IAEgC,uBAFhC,yDAGW,qDAHX,6CAIGtC,GAAe,GACd,qCACE,uBADF,wNC9QG,MAA0B,uCCSnCzF,EAAYC,aAAW,iBAAO,CAClCoG,QAAS,CACPlC,QAAS,OACToC,eAAgB,gBAElB4C,UAAW,CACT9I,OAAQ,gBACR4D,MAAO,WAKLmF,EAAgB,QAGlBC,EAAa,IACbC,EAAkB,GAEhBC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAYL,EAAOM,IAAI,OACvBC,EAAiBP,EAAOM,IAAI,YAC9BD,GAAaR,EAAcT,KAAKiB,IAAcG,OAAOH,IAAc,MACrEP,EAAaU,OAAOH,IAClBE,GAAkBV,EAAcT,KAAKmB,IAAmBC,OAAOD,IAAmB,KACpFR,EAAkBS,OAAOD,IAE3B,IAqEeE,EArEc,WAC3B,IAAMnJ,EAAUb,IAEhB,EAAsBc,IAAMC,SAAiBsI,GAA7C,mBAAO9D,EAAP,KAAY0E,EAAZ,KACA,EAAgCnJ,IAAMC,SAAiBuI,GAAvD,mBAAO9D,EAAP,KAAiB0E,EAAjB,KAIM/G,EAAe,SAACgH,GAEpB,GAAKf,EAAcT,KAAKwB,EAAMzH,OAAOQ,OAArC,CAGA,IAAMkH,EAAYD,EAAMzH,OAAOQ,MAAiBmH,QAAQ,MAAO,IAG/D,OAAOF,EAAMzH,OAAOO,MAClB,IAAK,MAEH,OAAOgH,EAAOF,OAAOK,EAASE,MAAM,EAAG,KACzC,IAAK,WAEH,OAAOJ,EAAYH,OAAOK,EAASE,MAAM,EAAG,KAC9C,QACE,UAKAC,EAAezJ,IAAM0J,SAAQ,WACjC,OAAQjF,EAAMC,IAAa,EAAK,EAAIiF,KAAKvE,MAAM,MAAaX,EAAMC,IAAa,MAC9E,CAACD,EAAKC,IAIHkF,EAAkB5J,IAAM0J,SAAQ,kBACpCC,KAAKvE,MAAO,IAAU,GAAO,MAAaX,EAAMC,IAAc,MAC9D,CAACD,EAAKC,IAGR,OACE,qCACE,eAACpB,EAAA,EAAD,CAAK9B,UAAWzB,EAAQwF,QAAxB,UACE,cAAC,EAAD,CACErD,MAAM,MACNC,KAAK,MACLC,MAAOqC,EACPpC,aAAcA,IAEhB,cAAC,EAAD,CACEH,MAAM,YACNC,KAAK,WACLC,MAAOsC,EACPrC,aAAcA,OAIlB,qBAAKb,UAAWzB,EAAQsI,UAAW3E,IAAKmG,EAAWjG,IAAI,cAEvD,cAAC,EAAD,CACEa,IAAKA,EACLC,SAAUA,EACV2C,SAAUoC,EACV9E,YAAaiF,QCtFf1K,EAAYC,aAAW,iBAAO,CAClC2K,OAAQ,CACN1B,WAAY,sDAEd2B,QAAS,CACPtE,eAAgB,iBAElBuE,WAAY,CACVnD,WAAY,QAEdoD,cAAe,CACb1K,OAAQ,cA2BG2K,EAvBO,WACpB,IAAMnK,EAAUb,IAEhB,OACE,qCACE,cAACiL,EAAA,EAAD,CAAQvE,SAAS,SAASpE,UAAWzB,EAAQ+J,OAA7C,SACE,eAACM,EAAA,EAAD,CAAS5I,UAAWzB,EAAQgK,QAA5B,UACE,cAACM,EAAA,EAAD,CAAY7I,UAAWzB,EAAQiK,WAA/B,4DAGA,cAAC,EAAD,SAIJ,cAACM,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACjH,EAAA,EAAD,CAAK9B,UAAWzB,EAAQkK,cAAxB,SACE,cAAC,EAAD,YC7BKO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a432883.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n  Button,\n  Link,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  dialogContentText: {\n    fontSize: '0.8rem',\n  },\n  exampleText: {\n    margin: '0 0.3rem',\n    fontSize: '0.7rem',\n    border: '0.1rem solid #dcdcdc',\n    padding: '0.4rem',\n  },\n  hr: {\n    margin: '1.2rem 0.2rem',\n  },\n  sectionLabel: {\n    margin: '0',\n  },\n  section: {\n    margin: '0 0.8rem',\n  },\n  tips: {\n    fontSize: '0.4rem',\n  },\n}));\n\nconst GuideButton: React.FC = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <Button\n        color=\"inherit\"\n        variant=\"outlined\"\n        onClick={handleOpen}\n      >\n        使い方\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogContent dividers={true}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n            className={classes.dialogContentText}\n          >\n            <h2>はじめに</h2>\n            <p>\n              このツールは、難しい譜面の<b>PUC</b>を狙うSOUND VOLTEX上級者をターゲットとしています。<br />\n              譜面のクリアや、ある程度の高スコアを狙う人に向けたものではない点、ご了承ください。\n            </p>\n\n            <hr className={classes.hr} />\n\n            <h2>使い方</h2>\n            <h4 className={classes.sectionLabel}>【STEP 1】</h4>\n            <div className={classes.section}>\n              <p>\n                餡蜜（速いノーツを同時押し）をしたい譜面について、その譜面の<b>BPM</b>と<b>NOTE TYPE</b>を入力します。\n              </p>\n              <p className={classes.exampleText}>\n                例）Divine's:Bugscript の2回出てくる速いトリル（24分）<br />\n                　⇒　BPM → 230<br />\n                　　　NOTE TYPE → 24（分音符）\n              </p>\n              <p><b>BPM</b>は数字3桁まで、<b>NOTE TYPE</b>は数字2桁まで、それぞれ整数で入力できます。</p>\n            </div>\n\n            <h4 className={classes.sectionLabel}>【STEP 2】</h4>\n            <div className={classes.section}>\n              <p>\n                計算結果が表示されます。<br />\n                どの程度CRITICAL判定で光るかが確認できます。\n              </p>\n              <p className={classes.section}>\n                <b>ノーツ間隔</b> ... 餡蜜したいノーツの1個目と2個目の間隔 [ms：ミリ秒]<br />\n                <b>CRITICAL範囲</b> ... 餡蜜した場合にCRITICAL判定となる範囲 [ms：ミリ秒]\n                <p className={classes.tips}>\n                  ※ 単一ノートのCRITICAL判定は、120fpsを前提としてノートの前後それぞれ5フーレム分 ( = 41.667 [ms] ) で計算をしています。\n                </p>\n              </p>\n              <p>\n                餡蜜が有効であるかの判断は、<b>CRITICAL範囲</b>の値を参考にするのがおすすめです。<br />\n                <b>CRITICAL範囲</b>の値が存在すれば、<b>\"理論的\"には餡蜜で光る</b>はずです。\n              </p>\n              <p>\n                計算結果に基づき、製作者の考察コメントが表示されます。参考程度にご覧ください。<br />\n                尚、<b>NOTE TYPE</b>が<b>24</b>で指定されている場合にのみ表示されるコメントがあります。\n              </p>\n            </div>\n            <h4 className={classes.sectionLabel}>【STEP 3】</h4>\n            <div className={classes.section}>\n              <p>イメージ図を確認します。<br />ただし厳密に正確な図ではないため、こちらはあくまで参考程度にご覧ください。</p>\n            </div>\n\n            <hr className={classes.hr} />\n\n            <h2>備考</h2>\n            <p>\n              ・上記の使い方を見てご不明な点がある場合は、\n              <Link href=\"https://twitter.com/waniroukun\" underline=\"always\" target=\"_blank\" rel=\"noopener noreferrer\">\n                製作者\n              </Link>\n              にお尋ねください。\n            </p>\n            <p>\n              ・具体的は計算式は下記の通りです。\n            </p>\n            <p className={classes.exampleText}>\n              ノーツ間隔 ⇒ 1000 [ms] / ( BPM × ( NOTE TYPE/4 ) × (1/60) )<br />\n              CRITICAL範囲 ⇒ 10フレーム【 10 × ( 1000 [ms] / 120 ) 】 - ノーツ間隔\n            </p>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>閉じる</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default GuideButton;\n","import React from 'react';\nimport {\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  numberField: {\n    margin: '0 1.4rem'\n  },\n}));\n\ntype NumberFieldProps = {\n  label: string;\n  name: string;\n  value: number;\n  handleChange: (event: React.ChangeEvent<{ value: unknown, name?: string }>) => void;\n};\n\nconst NumberField: React.FC<NumberFieldProps> = (props: NumberFieldProps) => {\n  const classes = useStyles();\n\n  const { label, name, value, handleChange } = props;\n  const valueStr = value === 0 ? '' : String(value);\n\n  return (\n    <TextField\n      label={label}\n      name={name}\n      type=\"number\"\n      inputProps={{ pattern: '[0-9]*' }}\n      value={valueStr}\n      onChange={handleChange}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      className={classes.numberField}\n    />\n  );\n};\n\nexport default NumberField;\n","export default __webpack_public_path__ + \"static/media/24to16_1.713ad739.jpg\";","export default __webpack_public_path__ + \"static/media/24to16_2.00bbf42c.jpg\";","import React from 'react';\nimport {\n  makeStyles,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from '@material-ui/core';\nimport Img24to16_1 from '../images/24to16_1.jpg'\nimport Img24to16_2 from '../images/24to16_2.jpg'\n\nconst useStyles = makeStyles(() => ({\n  buttonBox: {\n    margin: '0 2rem 0.7rem 2rem',\n    textAlign: 'right',\n  },\n  buttonText: {\n    fontSize: '0.7rem',\n  },\n  dialogContentText: {\n    fontSize: '0.8rem',\n  },\n  exampleText: {\n    margin: '0 0.3rem',\n    fontSize: '0.7rem',\n    border: '0.1rem solid #dcdcdc',\n    padding: '0.4rem',\n    textAlign: 'center',\n  },\n  img: {\n    width: '16rem',\n  },\n}));\n\ntype SupplementButtonProps = {\n  display: boolean;\n}\n\nconst SupplementButton: React.FC<SupplementButtonProps> = (props: SupplementButtonProps) => {\n  const classes = useStyles();\n  const { display } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <Box className={classes.buttonBox}>\n      <Button\n        className={classes.buttonText}\n        color=\"primary\"\n        variant=\"outlined\"\n        onClick={handleOpen}\n        style={{ visibility: display ? 'visible' : 'hidden' }}\n      >\n        ※ 24分を16分に変換とは？\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n        aria-labelledby=\"supplement-dialog-title\"\n        aria-describedby=\"supplement-dialog-description\"\n      >\n        <DialogTitle id=\"supplement-dialog-title\">\n          24分を16分に変換とは？\n        </DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText\n            id=\"supplement-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n            className={classes.dialogContentText}\n          >\n            <p>\n              24分のノーツというのは、0.5拍の間に均等に3個のノーツが存在するものです。<br />\n              その3個のノーツのうち、2個目と3個目を中央で餡蜜すると、<br />\n              1個目のノートと2個目・3個目との間隔がちょうど16分と同じになります。\n            </p>\n            <p className={classes.exampleText}>\n              <img className={classes.img} src={Img24to16_1} alt=\"Img24to16_1\" />\n            </p>\n            <p>\n              また、少しテクニカルにはなりますが、<br />\n              24分の隣接したレーンのトリルでも同様の餡蜜が可能です。\n            </p>\n            <p className={classes.exampleText}>\n              <img className={classes.img} src={Img24to16_2} alt=\"Img24to16_2\" />\n            </p>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>閉じる</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nSupplementButton.defaultProps = {\n  display: true,\n};\n\nexport default SupplementButton;\n","import React from 'react';\nimport {\n  makeStyles,\n  Box,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  TwitterShareButton,\n  TwitterIcon,\n} from 'react-share';\n\nconst useStyles = makeStyles(() => ({\n  tweetButtonBox: {\n    margin: '1rem 0',\n  },\n  tweetButtonButton: {\n    borderColor: '#00aced',\n    backgroundColor: '#00aced',\n    color: '#fff',\n    transition: '0.5s',\n    \"&:hover\": {\n      color: '#00aced',\n      transition: '0.5s',\n    },\n  },\n  tweetButton: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: '0.4rem',\n  }\n}));\n\ntype TweetButtonProps = {\n  bpm: number,\n  noteType: number,\n  criticalSec: number;\n};\n\nconst TweetButton: React.FC<TweetButtonProps> = (props: TweetButtonProps) => {\n  const classes = useStyles();\n  const { bpm, noteType, criticalSec } = props;\n\n  const noteTypeText = noteType === 1 ? \"全音符\" : `${noteType}分音符`\n\n  let tweetText = \"\";\n  if (criticalSec > 0) {\n    tweetText = `BPM${bpm}の${noteTypeText}を餡蜜するときにCRITICAL判定で光る範囲は${criticalSec}ミリ秒あります。`;\n  } else {\n    tweetText = `BPM${bpm}の${noteTypeText}は餡蜜してもCRITICAL判定で光りません。`;\n  }\n\n  return (\n    <Box className={classes.tweetButtonBox}>\n      <Button\n        variant=\"outlined\"\n        className={classes.tweetButtonButton}\n      >\n        <TwitterShareButton\n          title={tweetText}\n          url={`https://kattrxvjxxde.github.io/an32_checker/?bpm=${bpm}&noteType=${noteType}`}\n          hashtags={['SDVX餡蜜チェッカー']}\n          className={classes.tweetButton}\n        >\n          <TwitterIcon size={24} round className={classes.icon} /> 結果をツイート\n        </TwitterShareButton>\n      </Button>\n    </Box>\n  );\n};\n\nexport default TweetButton;\n","import React from 'react';\nimport {\n  makeStyles,\n  Box,\n} from \"@material-ui/core\";\nimport SupplementButton from './SupplementButton';\nimport TweetButton from './TweetButton';\n\nconst FIGURE_CONTAINTER_HEIGHT = 320;\nconst FIGURE_HEIGHT = 240;\nconst NOTE_WIDTH = 120;\n\nconst CRITICAL_TH0 = 1.0 * 1000 / 120;\nconst CRITICAL_TH1 = 3.0 * 1000 / 120;\nconst CRITICAL_TH2 = 4.2 * 1000 / 120;\nconst CRITICAL_TH3 = 6.0 * 1000 / 120;\n\nconst useStyles = makeStyles(() => ({\n  flexBox: {\n    marginBottom: '0.9rem',\n    padding: '0.7rem',\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    border: '0.2rem solid #dcdcdc',\n  },\n  figureContainer: {\n    height: FIGURE_CONTAINTER_HEIGHT,\n    position: 'relative',\n  },\n  noteContainer: {\n    height: FIGURE_CONTAINTER_HEIGHT,\n    display: 'flex',\n  },\n  realNoteFigure1: {\n    margin: 'auto',\n    marginRight: 16,\n    width: NOTE_WIDTH,\n    borderBottom: '0.8rem solid #696969',\n    zIndex: 100,\n  },\n  realNoteFigure2: {\n    margin: 'auto',\n    marginLeft: 16,\n    width: NOTE_WIDTH,\n    borderTop: '0.8rem solid #696969',\n    zIndex: 100,\n  },\n  criticalFigure: {\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    WebkitTransform: 'translate(-50%, -50%)',\n    MsTransform: 'translate(-50%, -50%)',\n    width: '100%',\n    position: 'absolute',\n    textAlign: 'center',\n    animation: '$flashFigure linear infinite 1s',\n  },\n  '@keyframes flashFigure': {\n    '0%, 100%': { opacity: 0.5 },\n    '50%': { opacity: 0.3 },\n  },\n  impossibleText: {\n    top: '38%',\n    transform: 'rotate(12deg)',\n    WebkitTransform: 'rotate(12deg)',\n    MsTransform: 'rotate(12deg)',\n    width: '100%',\n    position: 'absolute',\n    textAlign: 'center',\n    fontSize: '3.4rem',\n    fontWeight: 'bold',\n    color: '#999',\n  },\n  virtualNote: {\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    WebkitTransform: 'translate(-50%, -50%)',\n    MsTransform: 'translate(-50%, -50%)',\n    width: '100%',\n\n  },\n  resultContainer: {\n    marginBottom: '3.2rem',\n    textAlign: 'center',\n  },\n  label: {\n    marginBottom: '1.4rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '1.4rem',\n    '&::before': {\n      marginRight: '1.4rem',\n      borderTop: '0.1rem solid',\n      content: '\"\"',\n      width: '4rem',\n    },\n    '&::after': {\n      marginLeft: '1.4rem',\n      borderTop: '0.1rem solid',\n      content: '\"\"',\n      width: '4rem',\n    },\n  },\n  description: {\n    fontSize: '0.8rem',\n    textAlign: 'center',\n  },\n  resultText: {\n    color: '#666',\n    fontWeight: 'bold',\n  },\n  criticalText: {\n    fontWeight: 'bold',\n    animation: '$flashText linear infinite 1s',\n  },\n  '@keyframes flashText': {\n    '0%, 100%': { opacity: 1.0 },\n    '50%': { opacity: 0.7 },\n  },\n}));\n\ntype ResultBoxProps = {\n  bpm: number;\n  noteType: number;\n  interval: number;\n  criticalSec: number;\n};\n\nconst ResultBox: React.FC<ResultBoxProps> = (props: ResultBoxProps) => {\n  const classes = useStyles();\n  const { bpm, noteType, interval, criticalSec } = props;\n\n  const noteFigureHeight =\n    interval > criticalSec\n      ? FIGURE_HEIGHT\n      : FIGURE_HEIGHT * interval / criticalSec;\n\n  const criticalFigureHeight =\n   criticalSec > interval\n      ? FIGURE_HEIGHT\n      : FIGURE_HEIGHT * criticalSec / interval;\n\n  const intervalStr = interval === 0 ? 'ERROR' : `${interval} ms`\n\n  let criticalSecStr = 'ERROR';\n  if (interval !== 0) {\n    criticalSecStr = criticalSec > 0 ? `${criticalSec} ms` : 'なし';\n  }\n\n  let criticalTextColor = '#666';\n  let criticalFigureColor = 'repeating-linear-gradient(-45deg, #666, #666 5px, #ccc 5px, #ccc 10px)';\n  let resultText = '正常となるような値を指定してください。';\n\n  if (interval !== 0) {\n    if (criticalSec <= 0) {\n      resultText = '餡蜜は不可能です。';\n    } else if (0 <= criticalSec && criticalSec < CRITICAL_TH0) {\n      criticalTextColor = '#666';\n      criticalFigureColor = 'repeating-linear-gradient(-45deg, #666, #666 5px, #bbb 5px, #bbb 10px)';\n      resultText = '餡蜜の有用性はほぼありません。\\n頑張って譜面通りに叩きましょう。';\n    } else if (CRITICAL_TH0 <= criticalSec && criticalSec < CRITICAL_TH1) {\n      criticalTextColor = '#05f';\n      criticalFigureColor = 'repeating-linear-gradient(-45deg, #05f, #05f 5px, #7bf 5px, #7bf 10px)';\n      resultText = noteType === 24\n        ? '餡蜜の有用性は低いです。\\n24分を16分に変換できる譜面（※）であっても、\\n相当精度に自信がない限りは、頑張って譜面通りに叩きましょう。'\n        : '餡蜜の有用性は低いです。\\n頑張って譜面通りに叩きましょう。';\n    } else if (CRITICAL_TH1 <= criticalSec && criticalSec < CRITICAL_TH2) {\n      criticalTextColor = '#0c0';\n      criticalFigureColor = 'repeating-linear-gradient(-45deg, #0c0, #0c0 5px, #8e8 5px, #8e8 10px)';\n      resultText = noteType === 24\n        ? '餡蜜の有用性はそこそこあります。\\n24分を16分に変換できる譜面(※)であれば、\\n餡蜜してみるのもよいでしょう。'\n        : '餡蜜の有用性はそこそこあります。\\nしかしながら、できる限りは頑張って譜面通りに叩くのが良さそうです。';\n    } else if (CRITICAL_TH2 <= criticalSec && criticalSec < CRITICAL_TH3) {\n      criticalTextColor = '#f70';\n      criticalFigureColor = 'repeating-linear-gradient(-45deg, #f70, #f70 5px, #fc5 5px, #fc5 10px)';\n      resultText = noteType === 24\n        ? '餡蜜の有用性は高いです！\\n24分を16分に変換できる譜面(※)であれば、\\n安定してCRITICAL判定が出るでしょう。'\n        : '餡蜜の有用性は高いです！\\n1個目のノートからほんの少し遅入りして餡蜜する感覚に慣れたら、\\nCRITICAL判定を安定させることができるでしょう。';\n    } else {\n      criticalTextColor = '#f22';\n      criticalFigureColor = 'repeating-linear-gradient(-45deg, #f22, #f22 5px, #f99 5px, #f99 10px)';\n      resultText = '餡蜜の有用性は非常に高いです!!\\n特に意識せずとも餡蜜で安定してCRITICAL判定が出るでしょう。\\nノーツの中央でなく、どちらかのノーツに合わせた餡蜜でもおおよそ大丈夫です。';\n    }\n  }\n\n  const criticalTextClass = criticalSec > 0 ? classes.criticalText : classes.resultText;\n\n  return (\n    <>\n      <Box className={classes.label}>\n        計算結果\n      </Box>\n\n      <Box className={classes.resultContainer}>\n        <Box className={classes.flexBox}>\n          <Box className={classes.resultText}>\n            ノーツ間隔\n            <br />\n            {intervalStr}\n          </Box>\n          <Box\n            className={criticalTextClass}\n            style={{ color: criticalTextColor }}\n          >\n            CRITICAL範囲\n            <br />\n            {criticalSecStr}\n          </Box>\n        </Box>\n        <SupplementButton\n          display={/24分を16分に変換できる譜面/.test(resultText)}\n        />\n        <Box className={classes.description}>\n          {resultText.split('\\n').map((str, index) => (\n            <React.Fragment key={index}>{str}<br /></React.Fragment>\n          ))}\n        </Box>\n\n        <TweetButton\n          bpm={bpm}\n          noteType={noteType}\n          criticalSec={criticalSec}\n        />\n      </Box>\n\n      <Box className={classes.label}>\n        イメージ図\n      </Box>\n\n      <Box className={classes.flexBox}>\n        <Box className={classes.figureContainer}>\n          <Box className={classes.noteContainer}>\n            <Box\n              className={classes.realNoteFigure1}\n              sx={{ height: noteFigureHeight }}\n            />\n            <Box\n              className={classes.realNoteFigure2}\n              sx={{ height: noteFigureHeight }}\n            />\n          </Box>\n          {criticalSec > 0 && (\n            <Box\n              className={classes.criticalFigure}\n              sx={{ height: criticalFigureHeight }}\n              style={{ background: criticalFigureColor }}\n            />\n          )}\n          {criticalSec <= 0 && (\n            <Box className={classes.impossibleText}>\n              餡蜜不可能\n            </Box>\n          )}\n        </Box>\n      </Box>\n\n      <Box className={classes.description}>\n        <p>\n          2本ある黒い棒がノーツを表しています。<br />\n          左側が餡蜜したいノーツの1個目、右側が2個目です。<br />\n          この2本の黒い棒の間隔が<b>ノーツ間隔</b>に相当します。\n        </p>\n        <p>\n          斜め線で塗り潰された長方形が、<br />\n          餡蜜した場合にCRITICAL判定で光る範囲を表しています。<br />\n          この長方形の高さが<b>CRITICAL範囲</b>に相当します。\n          {criticalSec <= 0 && (\n            <>\n              <br />\n              （長方形がない場合、餡蜜した場合にCRITICAL判定で光る範囲はありません。）\n            </>\n          )}\n        </p>\n      </Box>\n    </>\n  );\n};\n\nexport default ResultBox;\n","export default __webpack_public_path__ + \"static/media/arrow_down.75e0a6e6.svg\";","import React from 'react';\nimport {\n  makeStyles,\n  Box,\n} from \"@material-ui/core\";\nimport NumberField from './NumberField';\nimport ResultBox from './ResultBox';\nimport ArrowDown from '../images/arrow_down.svg'\n\nconst useStyles = makeStyles(() => ({\n  flexBox: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  arrowDown: {\n    margin: '4% 40% 1% 40%',\n    width: '20%',\n  },\n}));\n\n// 「数字だけ」の正規表現\nconst onlyNumRegexp = /^\\d*$/;\n\n// デフォルト値（Divine's:Bugscriptの速いトリル）\nlet defaultBpm = 230;\nlet defaultNoteType = 24;\n// クエリストリングで指定されていたらその値にする\nconst params = new URLSearchParams(window.location.search);\nconst paramsBpm = params.get('bpm');\nconst paramsNoteType = params.get('noteType');\nif (paramsBpm && onlyNumRegexp.test(paramsBpm) && Number(paramsBpm) <= 999)\n  defaultBpm = Number(paramsBpm);\nif (paramsNoteType && onlyNumRegexp.test(paramsNoteType) && Number(paramsNoteType) <= 99)\n  defaultNoteType = Number(paramsNoteType);\n\nconst Calculator: React.FC = () => {\n  const classes = useStyles();\n\n  const [bpm, setBpm] = React.useState<number>(defaultBpm);\n  const [noteType, setNoteType] = React.useState<number>(defaultNoteType);\n\n\n  // onChange時に発火させる関数\n  const handleChange = (event: React.ChangeEvent<{ value: unknown, name?: string }>) => {\n    // 入力文字列が「数字だけ」でない場合、stateを更新しない\n    if (!onlyNumRegexp.test(event.target.value as string)) return;\n\n    // 入力文字列（0埋めなし）\n    const strValue = (event.target.value as string).replace(/^0+/, '');\n\n    // state更新\n    switch(event.target.name) {\n      case 'bpm':\n        // BPMは3桁まで\n        return setBpm(Number(strValue.slice(0, 3)));\n      case 'noteType':\n        // NOTE TYPEは2桁まで\n        return setNoteType(Number(strValue.slice(0, 2)));\n      default:\n        return;\n    }\n  };\n\n  // ノーツ間隔計算\n  const calcInterval = React.useMemo(() => {\n    return (bpm * noteType === 0) ? 0 : Math.round(240000000 / (bpm * noteType)) / 1000;\n  }, [bpm, noteType]\n  );\n\n  // CRITICAL範囲計算\n  const calcCriticalSec = React.useMemo(() =>\n    Math.round((1000000 / 12) - (240000000 / (bpm * noteType))) / 1000,\n    [bpm, noteType]\n  );\n\n  return (\n    <>\n      <Box className={classes.flexBox}>\n        <NumberField\n          label=\"BPM\"\n          name=\"bpm\"\n          value={bpm}\n          handleChange={handleChange}\n        />\n        <NumberField\n          label=\"NOTE TYPE\"\n          name=\"noteType\"\n          value={noteType}\n          handleChange={handleChange}\n        />\n      </Box>\n\n      <img className={classes.arrowDown} src={ArrowDown} alt=\"Arrowdown\" />\n\n      <ResultBox\n        bpm={bpm}\n        noteType={noteType}\n        interval={calcInterval}\n        criticalSec={calcCriticalSec}\n      />\n    </>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport {\n  makeStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  Container,\n  Box,\n} from '@material-ui/core';\nimport GuideButton from './components/GuideButton';\nimport Calculator from './components/Calculator';\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    background: 'linear-gradient(to bottom right, #56ccf2, #2f80ed)',\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  typography: {\n    fontWeight: 'bold',\n  },\n  calculatorBox: {\n    margin: '32px 0',\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography className={classes.typography}>\n            SDVX餡蜜チェッカー\n          </Typography>\n          <GuideButton />\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"sm\">\n        <Box className={classes.calculatorBox}>\n          <Calculator />\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}