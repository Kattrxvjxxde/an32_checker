{"version":3,"sources":["components/GuideButton.tsx","components/NumberField.tsx","components/ResultBox.tsx","components/Calculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","dialogContentText","fontSize","exampleText","margin","border","padding","GuideButton","classes","React","useState","open","setOpen","handleClose","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Button","color","variant","onClick","Dialog","onClose","scroll","DialogContent","dividers","DialogContentText","id","ref","tabIndex","className","DialogActions","NumberField","props","label","name","value","handleChange","valueStr","String","TextField","type","inputProps","maxLength","pattern","onChange","InputLabelProps","shrink","FIGURE_HEIGHT","flexBox","display","justifyContent","figureContainer","height","position","noteContainer","realNoteFigure1","marginRight","width","borderBottom","zIndex","realNoteFigure2","marginLeft","borderTop","criticalFigure","top","left","transform","WebkitTransform","MsTransform","background","textAlign","animation","opacity","virtualNote","hr","resultContainer","marginTop","ResultBox","interval","criticalSec","noteFigureHeight","criticalFigureHeight","intervalStr","criticalSecStr","Box","sx","Calculator","bpm","setBpm","noteType","setNoteType","onlyNumRegexp","event","test","target","numValue","Number","replace","calcInterval","useMemo","Math","round","calcCriticalSec","appBar","toolbar","calculatorBox","App","AppBar","Toolbar","Typography","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3958c4e4.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  dialogContentText: {\n    fontSize: '0.8rem',\n  },\n  exampleText: {\n    margin: '0 0.3rem',\n    fontSize: '0.6rem',\n    border: '0.1rem solid #dcdcdc',\n    padding: '0.3rem',\n  },\n}));\n\nconst GuideButton: React.FC = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <Button\n        color=\"inherit\"\n        variant=\"outlined\"\n        onClick={handleOpen}\n      >\n        使い方\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogContent dividers={true}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n            className={classes.dialogContentText}\n          >\n            <h3>使い方</h3>\n            <p>① 確認したい譜面の「BPM」と「NOTE TYPE」を入力します。</p>\n            <p className={classes.exampleText}>\n              例）Divine's:Bugscript の速いトリル<br />\n              　⇒　「BPM」→ 230, <br />\n              　　　「NOTE TYPE」→ 24（分音符）\n            </p>\n            <p>② 計算結果を確認します。</p>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>閉じる</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default GuideButton;\n","import React from 'react';\nimport { TextField } from \"@material-ui/core\";\n\ntype NumberFieldProps = {\n  label: string;\n  name: string;\n  value: number;\n  handleChange: (event: React.ChangeEvent<{ value: unknown, name?: string }>) => void;\n};\n\nconst NumberField: React.FC<NumberFieldProps> = (props: NumberFieldProps) => {\n  const { label, name, value, handleChange } = props;\n  const valueStr = value === 0 ? '' : String(value);\n\n  return (\n    <TextField\n      label={label}\n      name={name}\n      type=\"number\"\n      inputProps={{ maxLength: 3, pattern: '[0-9]*' }}\n      value={valueStr}\n      onChange={handleChange}\n      InputLabelProps={{\n        shrink: true,\n      }}\n    />\n  );\n};\n\nexport default NumberField;\n","import React from 'react';\nimport {\n  makeStyles,\n  Box,\n} from \"@material-ui/core\";\n\nconst FIGURE_CONTAINTER_HEIGHT = 320;\nconst FIGURE_HEIGHT = 240;\nconst NOTE_WIDTH = 120;\n\nconst useStyles = makeStyles(() => ({\n  flexBox: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  figureContainer: {\n    height: FIGURE_CONTAINTER_HEIGHT,\n    position: 'relative',\n  },\n  noteContainer: {\n    height: FIGURE_CONTAINTER_HEIGHT,\n    display: 'flex',\n  },\n  realNoteFigure1: {\n    margin: 'auto',\n    marginRight: 16,\n    width: NOTE_WIDTH,\n    borderBottom: '1rem solid #696969',\n    zIndex: 100,\n  },\n  realNoteFigure2: {\n    margin: 'auto',\n    marginLeft: 16,\n    width: NOTE_WIDTH,\n    borderTop: '1rem solid #696969',\n    zIndex: 100,\n  },\n  criticalFigure: {\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    WebkitTransform: 'translate(-50%, -50%)',\n    MsTransform: 'translate(-50%, -50%)',\n    width: '100%',\n    background: '#ffa050',\n    position: 'absolute',\n    textAlign: 'center',\n    animation: '$flash linear infinite 1s',\n  },\n  '@keyframes flash': {\n    '0%, 100%': { opacity: 0.7 },\n    '50%': { opacity: 0.4 },\n  },\n  virtualNote: {\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    WebkitTransform: 'translate(-50%, -50%)',\n    MsTransform: 'translate(-50%, -50%)',\n    width: '100%',\n\n  },\n  hr: {\n    margin: '32px 0',\n  },\n  resultContainer: {\n    textAlign: 'center',\n  },\n  label: {\n    marginTop: 40,\n    fontSize: '1.4rem',\n    textAlign: 'center',\n  },\n}));\n\ntype ResultBoxProps = {\n  interval: number;\n  criticalSec: number;\n};\n\nconst ResultBox: React.FC<ResultBoxProps> = (props: ResultBoxProps) => {\n  const classes = useStyles();\n  const { interval, criticalSec } = props;\n\n  const noteFigureHeight =\n    interval > criticalSec\n      ? FIGURE_HEIGHT\n      : FIGURE_HEIGHT * interval / criticalSec;\n\n  const criticalFigureHeight =\n   criticalSec > interval\n      ? FIGURE_HEIGHT\n      : FIGURE_HEIGHT * criticalSec / interval;\n\n  const intervalStr = interval === 0 ? 'ERROR' : `${interval} ms`\n\n  let criticalSecStr = 'ERROR';\n  if (interval !== 0) {\n    criticalSecStr = criticalSec > 0 ? `${criticalSec} ms` : 'なし';\n  }\n\n  return (\n    <>\n      <p className={classes.label}>\n        【 計算結果 】\n      </p>\n\n      <Box className={classes.resultContainer}>\n        <Box className={classes.flexBox}>\n          <div>\n            ─ ノーツ間秒数 ─\n            <br />\n            {intervalStr}\n          </div>\n          <div>\n            ─ CRITICAL範囲 ─\n            <br />\n            {criticalSecStr}\n          </div>\n        </Box>\n      </Box>\n\n      <hr className={classes.hr} />\n\n      <p className={classes.label}>\n        【 イメージ図 】\n      </p>\n\n      <Box className={classes.flexBox}>\n        <Box className={classes.figureContainer}>\n          <Box className={classes.noteContainer}>\n            <Box\n              className={classes.realNoteFigure1}\n              sx={{ height: noteFigureHeight }}\n            />\n            <Box\n              className={classes.realNoteFigure2}\n              sx={{ height: noteFigureHeight }}\n            />\n          </Box>\n          {criticalSec > 0 && (\n            <Box\n              className={classes.criticalFigure}\n              sx={{ height: criticalFigureHeight }}\n            />\n          )}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default ResultBox;\n","import React from 'react';\nimport {\n  makeStyles,\n  Box,\n} from \"@material-ui/core\";\nimport NumberField from './NumberField';\nimport ResultBox from './ResultBox';\n\nconst useStyles = makeStyles(() => ({\n  flexBox: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n}));\n\nconst Calculator: React.FC = () => {\n  const classes = useStyles();\n\n  const [bpm, setBpm] = React.useState<number>(230);\n  const [noteType, setNoteType] = React.useState<number>(24);\n\n  const onlyNumRegexp = /^\\d*$/;\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown, name?: string }>) => {\n    if (!onlyNumRegexp.test(event.target.value as string)) return;\n\n    const numValue = Number((event.target.value as string).replace(/^0+/, ''));\n\n    switch(event.target.name) {\n      case 'bpm':\n        return setBpm(numValue);\n      case 'noteType':\n        return setNoteType(numValue);\n      default:\n        return;\n    }\n  };\n\n  const calcInterval = React.useMemo(() => {\n    return (bpm * noteType === 0) ? 0 : Math.round(240000000 / (bpm * noteType)) / 1000;\n  }, [bpm, noteType]\n  );\n\n  const calcCriticalSec = React.useMemo(() =>\n    Math.round((1000000 / 12) - (240000000 / (bpm * noteType))) / 1000,\n    [bpm, noteType]\n  );\n\n  return (\n    <>\n      <Box className={classes.flexBox}>\n        <NumberField\n          label=\"BPM\"\n          name=\"bpm\"\n          value={bpm}\n          handleChange={handleChange}\n        />\n        <NumberField\n          label=\"NOTE TYPE\"\n          name=\"noteType\"\n          value={noteType}\n          handleChange={handleChange}\n        />\n      </Box>\n\n      <ResultBox\n        interval={calcInterval}\n        criticalSec={calcCriticalSec}\n      />\n    </>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport {\n  makeStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  Container,\n  Box,\n} from '@material-ui/core';\nimport GuideButton from './components/GuideButton';\nimport Calculator from './components/Calculator';\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    background: 'linear-gradient(to bottom right, #56ccf2, #2f80ed)',\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  calculatorBox: {\n    margin: '32px 0',\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography>SDVXあんみつチェッカー</Typography>\n          <GuideButton />\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"sm\">\n        <Box className={classes.calculatorBox}>\n          <Calculator />\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}